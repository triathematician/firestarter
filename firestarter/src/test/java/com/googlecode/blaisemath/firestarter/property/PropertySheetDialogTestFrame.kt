package com.googlecode.blaisemath.firestarter.property

import com.googlecode.blaisemath.app.ApplicationMenuConfig
import com.googlecode.blaisemath.firestarter.editor.EditorRegistration
import com.googlecode.blaisemath.firestarter.property.PropertySheetDialogTestFrame
import com.googlecode.blaisemath.ui.PropertyActionPanel
import org.apache.commons.math.stat.descriptive.SummaryStatistics
import java.awt.EventQueue
import java.awt.Rectangle
import java.awt.event.ActionEvent
import java.awt.event.ActionListener
import java.util.logging.Level
import java.util.logging.Logger
import javax.swing.*

/*
* #%L
* firestarter
* --
* Copyright (C) 2009 - 2019 Elisha Peterson
* --
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*      http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
* #L%
*/   class PropertySheetDialogTestFrame private constructor() : JFrame() {
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private fun initComponents() {
        jButton1 = JButton()
        jButton2 = JButton()
        defaultCloseOperation = WindowConstants.EXIT_ON_CLOSE
        contentPane.layout = BoxLayout(contentPane, BoxLayout.LINE_AXIS)
        jButton1.setText("Show")
        jButton1.addActionListener(ActionListener { evt: ActionEvent? -> jButton1ActionPerformed(evt) })
        contentPane.add(jButton1)
        jButton2.setText("Show w/ callback")
        jButton2.addActionListener(ActionListener { evt: ActionEvent? -> jButton2ActionPerformed(evt) })
        contentPane.add(jButton2)
        pack()
    } // </editor-fold>//GEN-END:initComponents

    private fun jButton1ActionPerformed(evt: ActionEvent?) { //GEN-FIRST:event_jButton1ActionPerformed
        show(this, true, Rectangle())
    } //GEN-LAST:event_jButton1ActionPerformed

    private fun jButton2ActionPerformed(evt: ActionEvent?) { //GEN-FIRST:event_jButton2ActionPerformed
        val r = Rectangle()
        PropertySheetDialog.Companion.show(this, true, r, Runnable {
            JOptionPane.showMessageDialog(this@PropertySheetDialogTestFrame,
                    "You just edited the rectangle $r")
        })
    } //GEN-LAST:event_jButton2ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private var jButton1: JButton? = null
    private var jButton2: JButton? = null // End of variables declaration//GEN-END:variables

    companion object {
        /**
         * @param args the command line arguments
         */
        @JvmStatic
        fun main(args: Array<String>) {
            /* Set the Nimbus look and feel */
            //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
            /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
            try {
                for (info in UIManager.getInstalledLookAndFeels()) {
                    if ("Nimbus" == info.name) {
                        UIManager.setLookAndFeel(info.className)
                        break
                    }
                }
            } catch (ex: ClassNotFoundException) {
                Logger.getLogger(PropertySheetDialogTestFrame::class.java.name).log(Level.SEVERE, null, ex)
            } catch (ex: UnsupportedLookAndFeelException) {
                Logger.getLogger(PropertySheetDialogTestFrame::class.java.name).log(Level.SEVERE, null, ex)
            } catch (ex: IllegalAccessException) {
                Logger.getLogger(PropertySheetDialogTestFrame::class.java.name).log(Level.SEVERE, null, ex)
            } catch (ex: InstantiationException) {
                Logger.getLogger(PropertySheetDialogTestFrame::class.java.name).log(Level.SEVERE, null, ex)
            }
            //</editor-fold>

            /* Create and display the form */EventQueue.invokeLater { PropertySheetDialogTestFrame().isVisible = true }
        }
    }

    init {
        EditorRegistration.registerEditors()
        initComponents()
    }
}